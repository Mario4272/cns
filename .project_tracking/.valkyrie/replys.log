Morning Mario — Val here. I just checked the repo and the latest CI. Two key facts:

CI run #11 is failing (matrix job shows “Status Failure”; several jobs canceled after the (3.10,16) leg failed). Also saw the artifact warning: No files were found with the provided path: perf_last_explain.json. 
GitHub

Issues #9–#12 are still open, not closed with receipts. The open issues list shows them as “Status: Open.” 
GitHub

Because of those, I can’t stamp Phase 0A as complete yet. The good news: your workflow file already enforces the right gates (coverage ≥85%, pgTAP smoke, perf smoke, artifact upload). The fix is just to get this run green and then close the issues with the run URL.

What JR should do now (copy/paste)

Make the current CI green

Open the failing job logs for CI run #11 and find the first red step in the (3.10, 16) leg (lint/type/pytest/pgTAP/perf-smoke). The summary confirms failure and an artifact path warning; the real failure is likely earlier (ruff/mypy/pytest/pgTAP/perf budget). 
GitHub

Locally reproduce the CI sequence:

pre-commit run -a
python -m pytest -q --cov=cns_py --cov-report=term --cov-fail-under=85
psql "postgres://cns:cns@127.0.0.1:5433/cns" -f tests_pg/pg_tap_smoke.sql
python scripts/perf_smoke.py --iters 15 --p95-budget-ms 500


(Use the same env vars as in CI if needed.)

Always produce the perf EXPLAIN artifact
Your workflow uploads perf_last_explain.json unconditionally, but the perf script didn’t write it, hence the warning. Two options:

Write the file in scripts/perf_smoke.py every run (pass or fail).

Or guard the upload step:

if: always() && hashFiles('perf_last_explain.json') != ''


Current file path expectation is set here: .github/workflows/ci.yaml lines ~293–300. 
GitHub

Close the receipts
When the next CI run is green, paste that run URL in each of #9, #10, #11, #12 and close them. Right now they’re still open. 
GitHub

Sanity checklist (quick pass before re-pushing)

pytest passes with --cov-fail-under=85. (Your workflow enforces it.) 
GitHub

tests_pg/pg_tap_smoke.sql passes against the service DB. 
GitHub

perf_smoke.py prints P95 and creates perf_last_explain.json. 
GitHub

Pre-commit is clean locally (pre-commit run -a).

Then push → confirm the green run → drop the links in #9–#12.

Verdict

You’re 98% there. Once that single CI run is green and you close #9–#12 with the link receipts, I’ll stamp Phase 0A: COMPLETE without further ceremony. Right now: not stamped yet due to the failing run and open issues. Want me to glance again the moment the next run flips green?