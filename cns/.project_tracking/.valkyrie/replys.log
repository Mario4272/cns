# CNS Phased Build Plan — Authoring Instructions for JR

> This section defines **how to edit this plan** and the **exact inserts** to make under each phase. Copy/paste the blocks below into the right sections, then replace placeholders like `{ISSUE_ID}` as we create GitHub issues.

---

## 0) Editing Rules (TL;DR)
- This doc = **source of truth**. Every checklist item gets:
  - **Owner** (JR/Val/Mario), **Due**, **Labels**, **Issue** link, and **Status** (☐/⏳/✅/⚠).
- For each phase:
  - Add the **Checklist** block
  - Add **Exit Criteria**
  - Add **SLOs/Metrics**
- When you create issues, link them back here (`#123`).

Labels to use: `phase/P0..P7`, `area/python`, `area/engine`, `area/visualization`, `cql`, `api`, `learners`, `docs`, `perf`, `security`.

---

## 1) Global Contracts (paste into a “Global Contracts” section)

### 1.1 Citations Contract
- **Every answer MUST include citations** for claims: `[source_id, uri, hash, optional line_span, fetched_at]`.
- If no citations, the engine returns **empty** (LLM must not invent facts).
- CQL flag: `REQUIRE PROVENANCE` (default true).

### 1.2 Belief Math Contract
- Default belief function (documented and tunable):
  - `confidence = σ(w_e*evidence + w_r*source_rep + w_t*recency − w_c*contradictions)`
- `EXPLAIN` MUST show **before/after** confidence deltas and the term breakdown.

### 1.3 Time/ASOF Contract
- All traversals are **bitemporal**. `ASOF <ts>` applies a temporal mask to atoms/fibers.

### 1.4 Hypothesis vs Claim
- **Claim** requires provenance.
- **Hypothesis** allowed (off by default). Separate priors; clearly labeled in output.

---

## 2) Phase Inserts

### Phase 1 — CQL v0.1 + Provenance + Belief (ACTIVE)
**Add this Checklist under Phase 1:**
- ☐ **CQL v0.1 parser**: `MATCH`, `WHERE SIMILAR()`, `ASOF`, `BELIEF()`, `RETURN … EXPLAIN PROVENANCE`  
  Owner: JR · Due: 2025-10-11 · Labels: `phase/P1,cql,area/python` · Issue: #{ISSUE_ID}
- ☐ **Executor (Python)**: plan = ANN shortlist → temporal mask → 1–2 hop traverse  
  Owner: JR · Due: 2025-10-14 · Labels: `phase/P1,area/python,perf` · Issue: #{ISSUE_ID}
- ☐ **Citations in results** (enforce Global Citations Contract)  
  Owner: JR · Due: 2025-10-15 · Labels: `phase/P1,api,docs` · Issue: #{ISSUE_ID}
- ☐ **EXPLAIN v1**: operator timings (ANN/mask/traverse) + **belief term breakdown**  
  Owner: JR · Due: 2025-10-16 · Labels: `phase/P1,perf` · Issue: #{ISSUE_ID}
- ☐ **Belief v0**: implement logistic; config weights; unit tests  
  Owner: JR · Due: 2025-10-17 · Labels: `phase/P1,learners` · Issue: #{ISSUE_ID}
- ☐ **Golden tests**: ASOF split, citations presence, belief thresholds  
  Owner: JR · Due: 2025-10-18 · Labels: `phase/P1,tests` · Issue: #{ISSUE_ID}
- ☐ **Latency SLO**: P95 ≤ 300 ms on dev corpus (10k atoms / 100k fibers / 100k vecs)  
  Owner: JR · Due: 2025-10-22 · Labels: `phase/P1,perf` · Issue: #{ISSUE_ID}
- ☐ **README snippet**: CQL example with time-split + citations + EXPLAIN  
  Owner: JR · Due: 2025-10-23 · Labels: `phase/P1,docs` · Issue: #{ISSUE_ID}

**Exit Criteria (Phase 1):**
- `cql(query)` returns results with **citations** and `EXPLAIN` shows **plan + belief math**.
- P95 latency target met on dev corpus.

**SLOs/Metrics (Phase 1):**
- P95 end-to-end ≤ 300 ms.
- 100% answers include ≥1 citation.

**CQL Examples (Phase 1 doc snippet):**
```cql
MATCH (f:Framework)-[r:REQUIRES]->(c:Concept)
WHERE SIMILAR(c, 'TLS 1.3') > 0.80
ASOF '2025-09-30'
RETURN f,c,r EXPLAIN PROVENANCE;
