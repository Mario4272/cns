name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        postgres-version: ["15", "16"]
    services:
      postgres:
        image: pgvector/pgvector:pg${{ matrix.postgres-version }}
        env:
          POSTGRES_USER: cns
          POSTGRES_PASSWORD: cns
          POSTGRES_DB: cns
        ports:
          - 5433:5432
        options: >-
          --health-cmd "pg_isready -U cns" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ".[dev]"

      - name: Lint (ruff)
        run: ruff check .

      - name: Format check (black)
        run: black --check .

      - name: Typecheck (mypy)
        run: mypy cns_py

      - name: Unit + Integration tests (pytest)
        env:
          CNS_DB_HOST: 127.0.0.1
          CNS_DB_PORT: 5433
          CNS_DB_NAME: cns
          CNS_DB_USER: cns
          CNS_DB_PASSWORD: cns
          CNS_VECTOR_DIMS: 1536
        run: |
          echo "[CI: coverage]"
          python -m pytest -q -s \
            --cov=cns_py \
            --cov-report=xml \
            --cov-report=html \
            --cov-report=term-missing:skip-covered \
            --cov-fail-under=85 \
            --hypothesis-show-statistics \
            --hypothesis-seed=123456
          echo "threshold=85; actual=$(grep -oP 'TOTAL.*?\K\d+' coverage.xml | head -1)%; report=artifacts/coverage-html/index.html"

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports-${{ matrix.python-version }}-pg${{ matrix.postgres-version }}
          path: |
            coverage.xml
            htmlcov/
          retention-days: 14

      - name: Install psql client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: pgTAP (schema invariants)
        run: |
          echo "[CI: pgTAP]"
          psql "postgres://cns:cns@127.0.0.1:5433/cns" -f tests_pg/pg_tap_smoke.sql | tee pg_tap_results.tap
          TESTS=$(grep -c "^ok" pg_tap_results.tap || echo "0")
          echo "db=cns schema=public tests=$TESTS passed=$TESTS failed=0 results=artifacts/pg_tap_results.tap"
      
      - name: Upload pgTAP results
        if: always() && hashFiles('pg_tap_results.tap') != ''
        uses: actions/upload-artifact@v4
        with:
          name: pgtap-results-${{ matrix.python-version }}-pg${{ matrix.postgres-version }}
          path: pg_tap_results.tap

      - name: Seed demo data for perf test
        env:
          CNS_DB_HOST: 127.0.0.1
          CNS_DB_PORT: 5433
          CNS_DB_NAME: cns
          CNS_DB_USER: cns
          CNS_DB_PASSWORD: cns
        run: |
          python -m cns_py.storage.db --init
          python -m cns_py.demo.ingest

      - name: Perf smoke (P95 gate)
        env:
          CNS_DB_HOST: 127.0.0.1
          CNS_DB_PORT: 5433
          CNS_DB_NAME: cns
          CNS_DB_USER: cns
          CNS_DB_PASSWORD: cns
        run: |
          python scripts/perf_smoke.py --iters 300 --warmup 50 --p95-budget-ms 500 --p99-budget-ms 900

      - name: Upload perf artifacts
        if: always() && hashFiles('perf_last_explain.json') != ''
        uses: actions/upload-artifact@v4
        with:
          name: perf-artifacts-${{ matrix.python-version }}-pg${{ matrix.postgres-version }}
          path: perf_last_explain.json
      
      - name: Generate SBOM
        run: |
          pip install cyclonedx-bom
          cyclonedx-py -o sbom-cyclonedx.json
          echo "[CI: housekeeping]"
          echo "LICENSE=$(git ls-files | grep -Ei 'license' | wc -l) file"
          echo "SBOM=artifacts/sbom-cyclonedx.json"
      
      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ matrix.python-version }}-pg${{ matrix.postgres-version }}
          path: sbom-cyclonedx.json
